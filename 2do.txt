*** TODO ASAP :

-- organise demo for end user
   -> what need to be done (marwan): 
                - Give a user friendly response when the badge is used;
                - Terminate the authentication
   -> what need to be done (marc):  



*** 2DO - Front end :

(1) ** implement the (FE) constraints

  [FE : OK]  1.    White list of users: no logon, no access

  [BE : OK]  2.    Permitted user groups:
                    a.    ‘T’ = Tester: must only see/use devices for his group
                    b.    ‘I’ = Incubator: must see/use devices for his group + ‘T’
                    c.    ‘S’ = Savi: must see/use devices for his group + ‘T’
                    d.    ‘B’ = Business: must only see/use devices for his group
                    e.    ‘A’ = admin: must see everything 

  [FE : OK]  3.    Max. number of devices per user = 3

  [FE : N/A][BE : OK]  
                      Max. duration LOCKED per device: 15min .. 
                      >> action  : unlock device automatically (by BE ?)
  [FE : ??][BE : ??]  
                      Max. duration IN USE per device:
                        a.    B: 48 hrs
                        b.    T/I/S: either 5 hrs, or EOB
                      >> action : show device with red background (by FE)
                                                        

  [FE: OK] list of users only available for administrator
  


(2) ** alignment of list-columns : 
      -- List (devices && users) columns must be aligned
      -- List Devices .. devices inuse && locked should be aligned vertically with list #3

(3) ** complete Edit & Delete User(s) aka CRUD operations on Users & Devices ..
    -- modal confirmation via : http://angular-ui.github.io/bootstrap/#/modal
    -- QUID ErrorMessages (= HTTP 200 ?!) returned by BackEnd ?? .. check refactored ErrorMessages returned by BE = Slack message by Marwan

    
(4) ** implementation of Create, Edit & Delete Device(s)



===============================================================================================================

  ++ define the API contracts for creating a new and/or updating an existing user :
    ---- quid the fields of such 'userDTO' ??
    ---- quid the maximumlength, datatype, required or not ? .. of each user property

    ?? badgeid  string required maxlength=10  minlength=1
    ?? username string required maxlength=15  minlength=1
    ?? password string required maxlength=15  minlength=6   hide input?
    ?? profile  string required maxlength=15  'administrator' || 'tester' || ???
    ?? fullname string          maxlength=15
    ?? enddate  data   required greater > today





  
  
  

*** 2DO - Back end :

-- provide a service operation which returns configuration items : max nbr of devices per user, ..

-- return the device list in function of the user (profile ..)
-- only the valid user can be authenticated
-- for an admin, also the unavailable device are returned, not for the other users/profiles
-- list of user only available for administrator

-- how to communicate between the badge and the user



** Nice to have :

-- FE : add new user : property 'enddate' should be greater than today
-- FE : main menu-option Users is only enabled for Users with profile == administrator
-- FE : delegate the toastr calls into a seperate nodification 'class' : service, facory or provider ?




** Questions / 2check :

° Quid a BUILD app approach based on Grunt/Gulp or Webpack ?!

°°° quid the actions (lock, unlock, confirm & return) buttons for administrators ?? ... can an administrator also play the role of a tester, of a .. ??


* After Care ??

-- http://softwareninjaneer.com/blog/creating-an-angularjs-reset-field-directive/


* Documentation ?! :

-- complete / update the My SQL database 'create' script ?

